[supervisord]
nodaemon=true
logfile=/var/log/supervisor/supervisord.log
logfile_maxbytes=50MB
logfile_backups=10
loglevel=debug
pidfile=/var/run/supervisord.pid
user=root

[unix_http_server]
file=/var/run/supervisor.sock
chmod=0700

[supervisorctl]
serverurl=unix:///var/run/supervisor.sock

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[program:etcd]
command=/bin/bash -c "source /etc/cluster_env && echo 'ETCD STARTING:' `date` && echo 'ETCD CONFIG:' && echo 'NAME='$MY_NAME && if [ \"$SSL_ENABLED\" = \"true\" ]; then PROTOCOL=https; SSL_PARAMS=\"--cert-file=/etc/ssl/cluster/etcd/client.crt --key-file=/etc/ssl/cluster/etcd/client.key --peer-cert-file=/etc/ssl/cluster/etcd/peer.crt --peer-key-file=/etc/ssl/cluster/etcd/peer.key --trusted-ca-file=/etc/ssl/cluster/ca/ca.crt --peer-trusted-ca-file=/etc/ssl/cluster/ca/ca.crt --client-cert-auth --peer-client-cert-auth\"; echo 'SSL_ENABLED: true'; else PROTOCOL=http; SSL_PARAMS=\"\"; echo 'SSL_ENABLED: false'; fi && echo 'CLIENT_URLS='$PROTOCOL'://0.0.0.0:'$ETCD_CLIENT_PORT && echo 'ADVERTISE_CLIENT_URLS='$PROTOCOL'://'$MY_IP':'$HOST_ETCD_CLIENT_PORT && echo 'PEER_URLS='$PROTOCOL'://0.0.0.0:'$ETCD_PEER_PORT && echo 'INITIAL_ADVERTISE_PEER_URLS='$PROTOCOL'://'$MY_IP':'$HOST_ETCD_PEER_PORT && echo 'INITIAL_CLUSTER='$ETCD_INITIAL_CLUSTER && if [ -f /var/lib/etcd/member/snap/db ]; then CLUSTER_STATE=existing; else CLUSTER_STATE=new; fi && echo 'CLUSTER_STATE='$CLUSTER_STATE && echo 'SSL_PARAMS='$SSL_PARAMS && exec etcd --name=$MY_NAME --listen-client-urls=$PROTOCOL://0.0.0.0:$ETCD_CLIENT_PORT --advertise-client-urls=$PROTOCOL://$MY_IP:$HOST_ETCD_CLIENT_PORT --listen-peer-urls=$PROTOCOL://0.0.0.0:$ETCD_PEER_PORT --initial-advertise-peer-urls=$PROTOCOL://$MY_IP:$HOST_ETCD_PEER_PORT --initial-cluster=$ETCD_INITIAL_CLUSTER --initial-cluster-state=$CLUSTER_STATE --initial-cluster-token=postgres-cluster-token --data-dir=/var/lib/etcd $SSL_PARAMS"
autostart=true
autorestart=true
stderr_logfile=/var/log/supervisor/etcd.err.log
stderr_logfile_maxbytes=50MB
stderr_logfile_backups=10
stdout_logfile=/var/log/supervisor/etcd.out.log
stdout_logfile_maxbytes=50MB
stdout_logfile_backups=10
user=root
priority=10

[program:patroni]
command=/bin/bash -c "source /etc/cluster_env && sleep 20 && echo 'PATRONI STARTING:' `date` && echo 'Config file: /etc/patroni/patroni.yml' && echo 'User:' `whoami` && echo 'Waiting for etcd...' && if [ \"$SSL_ENABLED\" = \"true\" ]; then ETCD_HEALTH_URL=\"https://localhost:$ETCD_CLIENT_PORT/health\"; echo 'Checking etcd health at:' $ETCD_HEALTH_URL; until curl -s --cert /etc/ssl/cluster/etcd/client.crt --key /etc/ssl/cluster/etcd/client.key --cacert /etc/ssl/cluster/ca/ca.crt $ETCD_HEALTH_URL >/dev/null 2>&1; do echo 'Waiting for etcd...'; sleep 2; done; else ETCD_HEALTH_URL=\"http://localhost:$ETCD_CLIENT_PORT/health\"; echo 'Checking etcd health at:' $ETCD_HEALTH_URL; until curl -s $ETCD_HEALTH_URL >/dev/null 2>&1; do echo 'Waiting for etcd...'; sleep 2; done; fi && echo 'etcd ready, starting Patroni' && exec python3 -m patroni /etc/patroni/patroni.yml"
autostart=true
autorestart=true
stderr_logfile=/var/log/supervisor/patroni.err.log
stderr_logfile_maxbytes=50MB
stderr_logfile_backups=10
stdout_logfile=/var/log/supervisor/patroni.out.log
stdout_logfile_maxbytes=50MB
stdout_logfile_backups=10
user=postgres
priority=20
depends_on=etcd

[program:updater]
command=/bin/bash -c "sleep 30 && echo 'UPDATE DAEMON STARTING:' `date` && exec /app/update-cluster.sh"
autostart=true
autorestart=true
stderr_logfile=/var/log/supervisor/updater.err.log
stderr_logfile_maxbytes=50MB
stderr_logfile_backups=10
stdout_logfile=/var/log/supervisor/updater.out.log
stdout_logfile_maxbytes=50MB
stdout_logfile_backups=10
user=root
priority=30
depends_on=etcd